{"version":3,"file":"js/9.7e60d79e.js","mappings":"iNACOA,MAAM,+B,GACJA,MAAM,e,GACLA,MAAM,kB,4p8BAFdC,EAAAA,EAAAA,IA4rCM,MA5rCN,EA4rCM,EA3rCJC,EAAAA,EAAAA,GAEM,MAFN,EAEM,EADJA,EAAAA,EAAAA,GAA+D,KAA/D,EAA2B,MAAEC,EAAAA,EAAAA,IAAGC,EAAAA,GAAE,2BAEpCC,G,aCJJ,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://resume2-development/./src/views/CodilityView.vue","webpack://resume2-development/./src/views/CodilityView.vue?75d4"],"sourcesContent":["<template>\r\n  <div class=\"justify-content-center mx-5\">\r\n    <div class=\"input-group\">\r\n      <h5 class=\"display-7 mt-3\">■ {{ $t(\"language.Codility\") }}</h5>\r\n    </div>\r\n    <table class=\"table table-striped\" style=\"font-size: 14px\">\r\n      <thead>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 14: 2022-11-01 (easy) PermCheck\r\n\r\n    A non-empty array A consisting of N integers is given.\r\n\r\n    A permutation is a sequence containing each element from 1 to N once, and only once.\r\n\r\n    For example, array A such that:\r\n\r\n        A[0] = 4\r\n        A[1] = 1\r\n        A[2] = 3\r\n        A[3] = 2\r\n    is a permutation, but array A such that:\r\n\r\n        A[0] = 4\r\n        A[1] = 1\r\n        A[2] = 3\r\n    is not a permutation, because value 2 is missing.\r\n\r\n    The goal is to check whether array A is a permutation.\r\n\r\n    Write a function:\r\n\r\n    function solution(A);\r\n\r\n    that, given an array A, returns 1 if array A is a permutation and 0 if it is not.\r\n\r\n    For example, given array A such that:\r\n\r\n        A[0] = 4\r\n        A[1] = 1\r\n        A[2] = 3\r\n        A[3] = 2\r\n    the function should return 1.\r\n\r\n    Given array A such that:\r\n\r\n        A[0] = 4\r\n        A[1] = 1\r\n        A[2] = 3\r\n    the function should return 0.\r\n\r\n    Write an efficient algorithm for the following assumptions:\r\n\r\n    N is an integer within the range [1..100,000];\r\n    each element of array A is an integer within the range [1..1,000,000,000].\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 14: 2022-11-01 (30mins 16%) \r\n    ・The following issues have been detected:\r\n        wrong answers, timeout errors.\r\n      For example, for the input [2] \r\n      the solution returned a wrong answer (got 1 expected 0).\r\n\r\n    function solution(A) {\r\n    // get the min value\r\n    var n = Math.min.apply(null, A)\r\n    // get the max value\r\n    var m = Math.max.apply(null, A)\r\n    \r\n    // if all the values was same\r\n    if(n == m) return 0\r\n\r\n    for(var i=0;i＜A.length;i++){\r\n        // if reached the max value return 1\r\n        if(n == m)return 1\r\n\r\n        if(!A.includes(n))return 0\r\n\r\n        n++\r\n    }\r\n    return 1\r\n}\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 13: 2022-10-24 (easy) \r\n\r\n    The goal is to find the earliest time when the frog can jump to \r\n    the other side of the river. \r\n    The frog can cross only when leaves appear at every position across \r\n    the river from 1 to X \r\n    (that is, we want to find the earliest moment when all the positions \r\n    from 1 to X are covered by leaves). \r\n    You may assume that the speed of the current in the river is negligibly small, \r\n    i.e. the leaves do not change their positions once they fall in the river.\r\n\r\n    For example, you are given integer X = 5 and array A such that:\r\n\r\n      A[0] = 1\r\n      A[1] = 3\r\n      A[2] = 1\r\n      A[3] = 4\r\n      A[4] = 2\r\n      A[5] = 3\r\n      A[6] = 5\r\n      A[7] = 4\r\n    In second 6, a leaf falls into position 5. \r\n    This is the earliest time when leaves appear in every position \r\n    across the river.\r\n\r\n    Write a function:\r\n\r\n    function solution(X, A);\r\n\r\n    that, given a non-empty array A consisting of N integers \r\n    and integer X, \r\n    returns the earliest time when the frog can jump to the \r\n    other side of the river.\r\n\r\n    If the frog is never able to jump to the other side of the river, \r\n    the function should return −1.\r\n\r\n    For example, given X = 5 and array A such that:\r\n\r\n      A[0] = 1\r\n      A[1] = 3\r\n      A[2] = 1\r\n      A[3] = 4\r\n      A[4] = 2\r\n      A[5] = 3\r\n      A[6] = 5\r\n      A[7] = 4\r\n    the function should return 6, as explained above.\r\n\r\n    Write an efficient algorithm for the following assumptions:\r\n\r\n    N and X are integers within the range [1..100,000];\r\n    each element of array A is an integer within the range [1..X].\r\n\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 13: 2022-10-24 (20mins )\r\n\r\n    function solution(X, A) {\r\n      if(!A.includes(X)) return -1;\r\n      if(X＜1) return -1;\r\n\r\n      // position array\r\n      var position = []\r\n      for(var i=0; i＜A.length; i++){\r\n          if(!position.includes(A[i])){\r\n              position.push(A[i])\r\n          }\r\n      }\r\n      // check the A\r\n      for(var i=0; i＜A.length; i++){\r\n          if(position.includes(A[i])){\r\n              const index = position.indexOf(A[i]);\r\n              position.splice(index,1)\r\n              if(position.length==0){\r\n                  return i\r\n              }\r\n          }\r\n      }\r\n  }\r\n  \r\n\r\n    SOLUTION 13: 2022-10-24 (40mins 84%) \r\n    ・Detected time complexity: O(N)\r\n    ・extreme_frog frog never across the river\r\n      ✘RUNTIME ERROR\r\n\r\n    function solution(X, A) {\r\n        if(!A.includes(X)) return -1;\r\n\r\n        // position array\r\n        var position = []\r\n        for(var i=1;i＜=X;i++){\r\n            position.push(i)\r\n        }\r\n        // check the A\r\n        for(var i=0; i＜A.length; i++){\r\n            if(position.includes(A[i])){\r\n                const index = position.indexOf(A[i]);\r\n                position.splice(index,1)\r\n                if(position.length==0){\r\n                    return i\r\n                }\r\n            }\r\n        }\r\n    }\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 12: 2022-10-22 (easy) TapeEquilibrium\r\n\r\n    it is the absolute difference between the sum of the first part and the sum of the second part.\r\n\r\n    For example, consider array A such that:\r\n\r\n    A[0] = 3\r\n    A[1] = 1\r\n    A[2] = 2\r\n    A[3] = 4\r\n    A[4] = 3\r\n    We can split this tape in four places:\r\n\r\n    P = 1, difference = |3 − 10| = 7\r\n    P = 2, difference = |4 − 9| = 5\r\n    P = 3, difference = |6 − 7| = 1\r\n    P = 4, difference = |10 − 3| = 7\r\n    Write a function:\r\n\r\n    function solution(A);\r\n\r\n    that, given a non-empty array A of N integers, returns the minimal difference that can be achieved.\r\n\r\n    For example, given:\r\n\r\n    A[0] = 3\r\n    A[1] = 1\r\n    A[2] = 2\r\n    A[3] = 4\r\n    A[4] = 3\r\n    the function should return 1, as explained above.\r\n\r\n    Write an efficient algorithm for the following assumptions:\r\n\r\n    N is an integer within the range [2..100,000];\r\n    each element of array A is an integer within the range [−1,000..1,000].\r\n\r\n\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 12: 2022-10-22 (35mins 84%) \r\n    ・Detected time complexity: O(N)\r\n    ・Two wrong answers \r\n        1. two elements✘WRONG ANSWER\r\n            got 0 expected 2000\r\n        2. small elements✘WRONG ANSWER\r\n            got 0 expected 20\r\n\r\n    function solution(arr) {\r\n        var leftSum = 0; // sum from 0 to P\r\n        var rightSum = arr.reduce((a, b) => a + b, 0); // sum from P to N\r\n        var min = Math.abs(leftSum - rightSum); // initial value for p=0\r\n        for (var p = 0; p ＜ arr.length; p++){\r\n            // move the element from the right to the left side\r\n            leftSum += arr[p];\r\n            rightSum -= arr[p];\r\n            // then update minimum difference\r\n            min = Math.min(min, Math.abs(leftSum - rightSum));\r\n        }\r\n        return min;\r\n    }\r\n\r\n\r\n    SOLUTION 12: 2022-10-22 (65mins 38%) \r\n    Got Wrong answer and TIme out \r\n    Detected time complexity: O(N * N)\r\n\r\n    function solution(A) {\r\n        var B = [];\r\n        const C = [...A];\r\n        var v = 0;\r\n        for(var i=0; i＜A.length; i++){\r\n            v += A[i]\r\n            C.shift()\r\n            var D = C.reduce(function(acc, val) { return acc + val; }, -v)\r\n            B.push(Math.abs(D)) \r\n        }\r\n        return Math.min(...B)\r\n    }\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 11: 2022-10-19 (easy) PermMissingElem\r\n\r\n    Your goal is to find that missing element.\r\n\r\n    Write a function:\r\n\r\n    function solution(A);\r\n\r\n    that, given an array A, returns the value of the missing element.\r\n\r\n    For example, given array A such that:\r\n\r\n    A[0] = 2\r\n    A[1] = 3\r\n    A[2] = 1\r\n    A[3] = 5\r\n    the function should return 4, as it is the missing element.\r\n\r\n    Write an efficient algorithm for the following assumptions:\r\n\r\n    N is an integer within the range [0..100,000];\r\n    the elements of A are all distinct;\r\n    each element of array A is an integer within the range [1..(N + 1)].\r\n\r\n\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 11: 2022-10-17 (3mins 80%) \r\n    Detected time complexity: O(N) or O(N * log(N)) or O(N ** 2)\r\n    due to array.sort()\r\n\r\n    function solution(A) {\r\n        var min = Math.min.apply(null, A);\r\n        if(min==2)return 1;\r\n        if(A.length==0)return 1;\r\n        A.sort(function(b,a){return b-a});\r\n        for(var key in A) {\r\n            var value = A[key]+1;\r\n            if(!A.includes(value) && value>0){\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n\r\n    SOLUTION 11: 2022-10-17 (8mins 70%) \r\n    detected: runtime errors, timeout errors. and\r\n    Invalid result type, integer expected, 'undefined' found\r\n    Perhaps you are missing a 'return'?\r\n\r\n    function solution(A) {\r\n        var min = Math.min.apply(null, A);\r\n        if(min==2)return 1;\r\n        A.sort(function(b,a){return b-a});\r\n        for(var key in A) {\r\n            var value = A[key]+1;\r\n            if(!A.includes(value) && value>0){\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    SOLUTION 11: 2022-10-17 (28mins 20%) \r\n    Got Wrong answer and TIme out\r\n\r\n    function solution(A) {\r\n        var min = Math.min.apply(null, A);\r\n        var max = Math.max.apply(null, A);\r\n        for(var key in A) {\r\n            var value = max-A[key];\r\n            if(!A.includes(value)){\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    SOLUTION 11: 2022-10-17 (15mins 50%) \r\n    Got Wrong answer and TIme out\r\n\r\n    function solution(A) {\r\n        var min = Math.min.apply(null, A);\r\n        var max = Math.max.apply(null, A);\r\n        if(max＜0)return 1;\r\n        A.sort(function(b,a){return b-a});\r\n        for(var key in A) {\r\n            var value = A[key]+1;\r\n            if(!A.includes(value) && value>0){\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 10: 2022-10-16 (easy) OddOccurrencesInArray\r\n\r\n    A non-empty array A consisting of N integers is given. \r\n    The array contains an odd number of elements, \r\n    and each element of the array can be paired with another element that has the same value, \r\n    except for one element that is left unpaired.\r\n\r\n    For example, in array A such that:\r\n\r\n    A[0] = 9  A[1] = 3  A[2] = 9\r\n    A[3] = 3  A[4] = 9  A[5] = 7\r\n    A[6] = 9\r\n    the elements at indexes 0 and 2 have value 9,\r\n    the elements at indexes 1 and 3 have value 3,\r\n    the elements at indexes 4 and 6 have value 9,\r\n    the element at index 5 has value 7 and is unpaired.\r\n    Write a function:\r\n\r\n    function solution(A);\r\n\r\n    that, given an array A consisting of N integers \r\n    fulfilling the above conditions, returns the value of the unpaired element.\r\n\r\n    For example, given array A such that:\r\n\r\n    A[0] = 9  A[1] = 3  A[2] = 9\r\n    A[3] = 3  A[4] = 9  A[5] = 7\r\n    A[6] = 9\r\n    the function should return 7, as explained in the example above.\r\n\r\n    Write an efficient algorithm for the following assumptions:\r\n\r\n    N is an odd integer within the range [1..1,000,000];\r\n    each element of array A is an integer within the range [1..1,000,000,000];\r\n    all but one of the values in A occur an even number of times.\r\n\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 10: 2022-10-17 (15mins 100%)\r\n    Detected time complexity:O(N) or O(N*log(N))\r\n\r\n    function solution(A) {\r\n        const B = {}\r\n        A.forEach(element => {\r\n            B[element] = (B[element] || 0) + 1;\r\n        });\r\n        for (var key in B) {\r\n            if(B[key]%2!=0){\r\n                return parseInt(key)\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    SOLUTION 10: 2022-10-16 (15mins 66%)\r\n    Detected time complexity: O(N**2)\r\n      Killed. Hard limit reached: 6.000 sec\r\n\r\n    function solution(A) {\r\n        const counts = {}\r\n        var d = [...A];\r\n        var odd = 0;\r\n        A.forEach(element => {\r\n            d.shift();  \r\n            counts[element] = (counts[element] || 0) + 1;   \r\n            if(counts[element]%2!=0 && !d.includes(element)){\r\n                odd = element\r\n            }\r\n        });\r\n        return odd;\r\n    }\r\n\r\n    SOLUTION 10: 2022-10-16 (15mins 66%)\r\n    Detected time complexity: O(N**2)\r\n      splice() is several orders of magnitude slower than a for loop \r\n      iterating through the elements.\r\n\r\n    function solution(A) {\r\n        var c = [];\r\n        for(var i=0; i＜A.length; i++){\r\n            if(!c.includes(A[i])){\r\n                c.push(A[i]);\r\n            }else{\r\n                c.splice(c.indexOf(A[i]), 1)\r\n            }\r\n        }\r\n        if(c && c[0]!= undefined)return c[0];\r\n        return 0;\r\n    }\r\n\r\n\r\n    SOLUTION 10: 2022-10-16 (25mins 50%)\r\n    Detected time complexity: O(N**2)\r\n    and undefined return found\r\n\r\n    function solution(A) {\r\n        var c = []\r\n        var d = []\r\n        for(var i=0; i＜A.length; i++){\r\n            if(c.includes(A[i])){\r\n                d.push(A[i])\r\n            }else{\r\n                c.push(A[i])\r\n            }\r\n        }\r\n        return c.filter(x => !d.includes(x))[0]\r\n    }\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 9: 2022-10-12 (easy)\r\n\r\n    A non-empty array A consisting of N integers is given. The consecutive elements of array A represent consecutive cars on a road.\r\n\r\n    Array A contains only 0s and/or 1s:\r\n\r\n    0 represents a car traveling east,\r\n    1 represents a car traveling west.\r\n    The goal is to count passing cars. We say that a pair of cars (P, Q), where 0 ≤ P ＜ Q ＜ N, is passing when P is traveling to the east and Q is traveling to the west.\r\n\r\n    For example, consider array A such that:\r\n\r\n    A[0] = 0\r\n    A[1] = 1\r\n    A[2] = 0\r\n    A[3] = 1\r\n    A[4] = 1\r\n    We have five pairs of passing cars: (0, 1), (0, 3), (0, 4), (2, 3), (2, 4).\r\n\r\n    Write a function:\r\n\r\n    class Solution { public int solution(int[] A); }\r\n\r\n    that, given a non-empty array A of N integers, returns the number of pairs of passing cars.\r\n\r\n    The function should return −1 if the number of pairs of passing cars exceeds 1,000,000,000.\r\n\r\n    For example, given:\r\n\r\n    A[0] = 0\r\n    A[1] = 1\r\n    A[2] = 0\r\n    A[3] = 1\r\n    A[4] = 1\r\n    the function should return 5, as explained above.\r\n\r\n    Write an efficient algorithm for the following assumptions:\r\n\r\n    N is an integer within the range [1..100,000];\r\n    each element of array A is an integer that can have one of the following values: 0, 1.\r\n\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 9: 2022-10-15 (18mins 100%) \r\n    Detected time complexity: O(N)\r\n\r\n    function solution(A) {\r\n        var n = 0;\r\n        var c = [];\r\n        if(!A.includes(0))return 0;\r\n        if(!A.includes(1))return 0;\r\n        for(var i=0; i＜A.length; i++ ){\r\n            if(A[i]==0)c.push(0);\r\n            if(A[i]!=0 && c.includes(0)){\r\n                n += c.length;\r\n            }\r\n        }\r\n        if(n>1000000000)return -1;\r\n        return n;\r\n    }\r\n\r\n    SOLUTION 9: 2022-10-14 (15mins 50%) \r\n    Detected time complexity: O(N**2) and wrong answer\r\n\r\n    function solution(A) {\r\n        var n = 0;\r\n        var c = [];\r\n        for(var i=0; i＜A.length; i++ ){\r\n            if(A[i]!=0 && c.includes(0)){\r\n                for(var j=0; j＜c.length;j++){\r\n                    n++;\r\n                }\r\n            }else{\r\n                c.push(0)\r\n            }\r\n        }\r\n\r\n        return n;\r\n    }\r\n\r\n    SOLUTION 9: 2022-10-12 (25mins 60%) \r\n    Detected time complexity: O(N**2)\r\n\r\n    function solution(A) {\r\n        var n = 0;\r\n        for(var i=0; i＜A.length; i++ ){\r\n            if(A[i]==0){\r\n                for(var j=i+1; j＜A.length; j++ ){\r\n                    if(A[j]==1){\r\n                        n++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 8: 2022-10-11 (easy)\r\n\r\n    Write a function:\r\n\r\n    class Solution { public int solution(int X, int Y, int D); }\r\n\r\n    that, given three integers X, Y and D, \r\n    returns the minimal number of jumps from position X to \r\n    a position equal to or greater than Y.\r\n\r\n    For example, given:\r\n\r\n    X = 10\r\n    Y = 85\r\n    D = 30\r\n    the function should return 3, because the frog will be positioned as follows:\r\n\r\n    after the first jump, at position 10 + 30 = 40\r\n    after the second jump, at position 10 + 30 + 30 = 70\r\n    after the third jump, at position 10 + 30 + 30 + 30 = 100\r\n    Write an efficient algorithm for the following assumptions:\r\n\r\n    X, Y and D are integers within the range [1..1,000,000,000];\r\n    X ≤ Y.\r\n\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 8: 2022-10-11 (25mins 100%)\r\n\r\n    function solution(X, Y, D) {\r\n        var T = (Y-X)/D;\r\n        return Math.ceil(T);\r\n    }\r\n\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 7: 2022-10-11 (easy)\r\n\r\n    Write a function:\r\n\r\n    class Solution { public int[] solution(int[] A, int K); }\r\n\r\n    that, given an array A consisting of N integers and an integer K, \r\n    returns the array A rotated K times.\r\n\r\n    For example, given\r\n\r\n        A = [3, 8, 9, 7, 6]\r\n        K = 3\r\n    the function should return [9, 7, 6, 3, 8]. Three rotations were made:\r\n\r\n        [3, 8, 9, 7, 6] -> [6, 3, 8, 9, 7]\r\n        [6, 3, 8, 9, 7] -> [7, 6, 3, 8, 9]\r\n        [7, 6, 3, 8, 9] -> [9, 7, 6, 3, 8]\r\n    For another example, given\r\n\r\n        A = [0, 0, 0]\r\n        K = 1\r\n    the function should return [0, 0, 0]\r\n\r\n    Given\r\n\r\n        A = [1, 2, 3, 4]\r\n        K = 4\r\n    the function should return [1, 2, 3, 4]\r\n\r\n    Assume that:\r\n\r\n    N and K are integers within the range [0..100];\r\n    each element of array A is an integer within the range [−1,000..1,000].\r\n\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 7: 2022-10-11 (25mins 100%)\r\n\r\n    function solution(A, K) {\r\n        for(var i=0;i＜K;i++){\r\n           A.unshift(A[A.length-1]);\r\n           A.pop();\r\n        }\r\n        return A;\r\n    }\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 6: 2022-10-11 (easy)\r\n\r\n    Write a function: function solution(N[]);\r\n\r\n    that, return fibonacci\r\n\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 6: 2022-10-11 (15mins)\r\n\r\n    function solution(n) {\r\n        if (n === 0) {\r\n            return 0;\r\n        } else if (n === 1) {\r\n            return 1;\r\n        } else {\r\n            return this.fibonacci(n - 1) +\r\n                this.fibonacci(n - 2);\r\n        }\r\n    }\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 5: 2022-10-09 (hard)\r\n\r\n    Write a function:\r\n\r\n    class Solution { public int solution(int[] A, int[] B); }\r\n\r\n    that, given two arrays, A and B, consisting of N integers and describing the links, \r\n    computes the number of pairs of nodes X and Y, such that 0 ≤ X ＜ Y ≤ N, \r\n    and X and Y are connected via an odd number of links.\r\n\r\n    For example, given N = 6 and the following arrays:\r\n\r\n    A[0] = 0    B[0] = 3\r\n    A[1] = 3    B[1] = 1\r\n    A[2] = 4    B[2] = 3\r\n    A[3] = 2    B[3] = 3\r\n    A[4] = 6    B[4] = 3\r\n    A[5] = 3    B[5] = 5\r\n\r\n\r\n    the function should return 6, since:\r\n\r\n    there are six pairs of nodes connected by direct links, and\r\n    all other pairs of nodes are connected via two links.\r\n    Given N = 5 and the following arrays:\r\n\r\n    A[0] = 0    B[0] = 1\r\n    A[1] = 4    B[1] = 3\r\n    A[2] = 2    B[2] = 1\r\n    A[3] = 2    B[3] = 3\r\n    A[4] = 4    B[4] = 5\r\n\r\n\r\n    the function should return 9, since:\r\n\r\n    there are five pairs of nodes connected by direct links,\r\n    there are three pairs of nodes connected via three links, and\r\n    there is one pair of nodes connected via five links.\r\n    Given N = 7 and the following arrays:\r\n\r\n    A[0] = 0    B[0] = 3\r\n    A[1] = 4    B[1] = 5\r\n    A[2] = 4    B[2] = 1\r\n    A[3] = 2    B[3] = 3\r\n    A[4] = 7    B[4] = 4\r\n    A[5] = 6    B[5] = 3\r\n    A[6] = 3    B[6] = 4\r\n\r\n\r\n    the function should return 16, since:\r\n\r\n    there are seven pairs of nodes connected by direct links, and\r\n    there are nine pairs of nodes connected via three links.\r\n    Write an efficient algorithm for the following assumptions:\r\n\r\n    N is an integer within the range [0..90,000];\r\n    each element of arrays A and B is an integer within the range [0..N];\r\n    the network has a tree topology;\r\n    any pair of nodes is connected via no more than 1000 links.\r\n            </textarea\r\n              >\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: lightpink;\r\n                \"\r\n              >\r\n    SOLUTION 5: \r\n\r\n    function solution(N) {\r\n        // thinking...\r\n    }\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 4: 2022-10-08 (easy)\r\n\r\n    Write a function: function solution(N);\r\n\r\n    that, given a string N, returns N in CamelCase. \r\n\r\n    For example, given N = \"I am-bruce!! nice to@ meet you\"; \r\n    the function should return \"iAmBruceNiceToMeetYou\".\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 4: 2022-10-08 (15mins)\r\n\r\n    function CamelCase(N){\r\n        var regEx = /^[0-9a-zA-Z]+$/;\r\n        var N = N.split(\"\");\r\n        var str = N[0].toLowerCase();\r\n        for(var i=1; i ＜ N.length; i++){\r\n            if(N[i].match(regEx) && N[i]!=\" \")\r\n            {\r\n            str+=N[i].toLowerCase(); \r\n            }\r\n            else\r\n            {\r\n                if(N[i+1].match(regEx)){\r\n                    str+=N[i+1].toUpperCase();\r\n                    i++;\r\n                }\r\n                \r\n            }\r\n        }\r\n        return str;\r\n    }\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 3: 2022-10-08 (easy)\r\n\r\n    Write a function: function solution(N);\r\n\r\n    that, given a positive integer N, returns the length of its\r\n    longest binary gap. The function should return 0 if N\r\n    doesn&#x27;t contain a binary gap.\r\n\r\n    For example, given N = 1041 the function should return 5,\r\n    because N has binary representation 10000010001 and so its\r\n    longest binary gap is of length 5. Given N = 32 the function\r\n    should return 0, because N has binary representation\r\n    &#x27;100000&#x27; and thus no binary gaps.\r\n\r\n    Write an efficient algorithm for the following\r\n    assumptions: N is an integer within the range 1..2,147,483,647.\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 3: 2022-10-08 (15mins)\r\n\r\n    function solution(N) {\r\n        var binary = (N >>> 0).toString(2);\r\n        var binaryArr = String(binary).split(\"\");\r\n        if(\r\n            binaryArr[0]==\"0\" || \r\n            binaryArr[binaryArr.length]==\"0\"\r\n        ) return \"0\";\r\n        var binaryGap = [];\r\n        var n = 0;\r\n        binaryArr.forEach(function(b){\r\n        if(b==0)n++;\r\n        if(b==1)binaryGap.push(n),n=0;\r\n        })\r\n        return Math.max.apply(null, binaryGap);\r\n    }\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 2: 2022-10-07 (easy)\r\n\r\n    Write a function: function solution(a,b,k);\r\n\r\n    that, given a range of positive integer a to b and division number k, \r\n    returns the number of division of k\r\n\r\n    For example, given a = 1, b = 10 and k = 3 the function should return 3,\r\n    because range of a,b = 1,2,3,4,5,6,7,8,9,10 which 3,6,9 can be divider by k\r\n\r\n    Write an efficient algorithm for the following\r\n    assumptions: b is an integer within the range 1..2,147,483,647.\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 2: 2022-10-07 (15mins)\r\n\r\n    // Poor solution: time complexity = Linear time – O(n)\r\n    function solution(a,b,k) {\r\n       var n = 0;\r\n       var arry = [];\r\n       for(var i=a; i＜=b; i++){\r\n           if(i%k==0)arry.push(i),n++;\r\n       }\r\n       console.log(arry)\r\n       return n;\r\n    }\r\n\r\n    // Good Solution: time complexity = Constant time – O (1)\r\n    function solution(a,b,k) {\r\n      if(a%k==0)return Math.floor(((b-a)/k+1))\r\n      if(a%k>0)return Math.floor((b-(a-a%k))/k)\r\n    }\r\n\r\n\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"input-group\">\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"80\"\r\n                style=\"\r\n                  text-align: left;\r\n                  font-size: 13px;\r\n                  height: 280px;\r\n                  background: black;\r\n                  color: white;\r\n                \"\r\n              >\r\n    TASK 1: 2022-10-06 (easy)\r\n\r\n    Write a function: function solution(N[]);\r\n\r\n    that, given an array N of set of integer values, \r\n    returns the smaller missing integer in the array\r\n\r\n    For example, given N = [1,5,3,6,9] the function should return 4,\r\n    because 4 is the smallest missing integer in N\r\n\r\n    Write an efficient algorithm for the following\r\n    assumptions: N within the range 1..2,147,483,647.\r\n            </textarea\r\n              >\r\n\r\n              <textarea\r\n                class=\"mx-3\"\r\n                rows=\"4\"\r\n                cols=\"55\"\r\n                style=\"text-align: left; font-size: 13px; height: 280px\"\r\n              >\r\n    SOLUTION 1: 2022-10-06 (15mins)\r\n\r\n    function solution(N) {\r\n        var min = Math.min.apply(null, N);\r\n        var max =  Math.max.apply(null, N);\r\n        if(max＜0)return 1;\r\n\r\n        N.sort(function(b,a){return b-a});\r\n\r\n        for(var key in N) {\r\n            var value = N[key]+1;\r\n            if(!N.includes(value) ＆＆ value>0){\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n              </textarea>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n    </table>\r\n  </div>\r\n</template>\r\n<style scoped>\r\ntable th,\r\ntd {\r\n  vertical-align: top;\r\n}\r\n</style>\r\n","import { render } from \"./CodilityView.vue?vue&type=template&id=defaf858&scoped=true\"\nconst script = {}\n\nimport \"./CodilityView.vue?vue&type=style&index=0&id=defaf858&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\MySystems\\\\resume\\\\ui\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-defaf858\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_createElementVNode","_toDisplayString","_ctx","_hoisted_4","script","__exports__","render"],"sourceRoot":""}